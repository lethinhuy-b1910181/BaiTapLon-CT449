{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport API from \"@/services/api.user\";\nexport default {\n  name: \"add-user\",\n  data() {\n    return {\n      rules: {\n        required: value => !!value || \"This field is Required.\",\n        min: v => v.length >= 8 || \"Min 8 characters\",\n        emailMatch: () => `The email and password you entered don't match`\n      },\n      users: {\n        email: \"\",\n        password: \"\"\n      },\n      show: false,\n      show1: false\n    };\n  },\n  methods: {\n    async login() {\n      if (this.$refs.form.validate()) {\n        let result = await API.getLogin(this.users.email, this.users.password);\n        console.log(result.status);\n        console.warn(result.data.length);\n        if (result.status == 200 && result.data.length > 0) {\n          console.log(result.data);\n          localStorage.setItem(\"user-info\", JSON.stringify(result));\n          this.$router.push({\n            name: \"show-user\"\n          });\n        } else {\n          this.show = true;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA4FA;AACA;AACA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;IACA;EACA;EAEAC;IACA;MACA;QACA;QACAC;QACAA;QACA;UACAA;UACAC;UACA,KACAC,QACAC;YAAAf;UAAA;QACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","rules","required","min","emailMatch","users","email","password","show","show1","methods","console","localStorage","$router","push"],"sourceRoot":"src/components","sources":["Login.vue"],"sourcesContent":["<!-- <template> <v-app> <div class=\"background\"></div> <v-main class=\"d-flex\r\njustify-center align-center\"> <v-col cols=\"10\" lg=\"4\" class=\"mx-auto\"> <v-card\r\nclass=\"pa-4\"> <div class=\"text-center\"> <v-avatar size=\"100\" color=\"indigo\r\nlighten-4\"> <v-icon size=\"40\" color=\"indigo\">mdi-account</v-icon> </v-avatar>\r\n<h2 style=\"color: #3F51B5;\">LOGIN</h2> </div> <v-form ref=\"form\"\r\n@submit.prevent=\"login\" enctype=\"multipart/form-data\" > <v-card-text>\r\n<v-text-field v-model=\"users.email\" :rules=\"emailRules\" type=\"email\"\r\nlabel=\"Email\" placeholder=\"Email\" prepend-inner-icon=\"mdi-account\"\r\ncolor=\"indigo\" required /> <v-text-field v-model=\"users.password\"\r\n:rules=\"passwordRules\" :type=\"passwordShow?'text':'password'\" label=\"Password\"\r\nplaceholder=\"Password\" prepend-inner-icon=\"mdi-key\" :append-icon=\"passwordShow ?\r\n'mdi-eye':'mdi-eye-off'\" @click:append=\"passwordShow = !passwordShow\"\r\ncolor=\"indigo\" /> </v-card-text> <v-card-actions class=\"justify-center\" > <v-btn\r\n:loading=\"loading\" type=\"submit\" color=\"primary\" > <span class=\" px-8\r\n\">Login</span> </v-btn> </v-card-actions> </v-form> </v-card> </v-col> </v-main>\r\n</v-app> </template> <script> import axios from \"axios\"; import apiUser from\r\n\"../services/api.user.js\" export default { name: 'Login', data() { return {\r\npasswordShow:false, loading:false, snackbar:false, // show: false, emailRules: [\r\nv => !!v || 'E-mail is required', v => /.+@.+\\..+/.test(v) || 'E-mail must be\r\nvalid', ], users: { email: '', password: '', }, passwordRules: [ v => !!v ||\r\n'Password is required', v => (v && v.length >= 6) || 'Password must be 6\r\ncharacters or more!', ], }; }, methods:{ // submitHandler(){ // if\r\n(this.$refs.form.validate()){ // this.loading = true // setTimeout(()=> { //\r\nthis.loading = false // this.snackbar = true // },3000) // } // }, async login()\r\n{ if (this.$refs.form.validate()) { let result = await\r\nAPI.getLogin(this.users.email, this.users.password); console.log(result.status);\r\nconsole.warn(result.data.length); if (result.status == 200 && result.data.length\r\n> 0) { console.log(result.data); localStorage.setItem(\"user-info\",\r\nJSON.stringify(result)); this.$router.push({ name: \"show-user\" }); } else {\r\nthis.show = true; } } }, }, // mounted() { // let user =\r\nlocalStorage.getItem(\"user-info\"); // if (user) { // this.$router.push({ name:\r\n\"show-user\" }); // } // }, } </script> <style> .background { background-color:\r\n#004d40; height: 50%; width: 100%; top: 0; display: block; position: absolute; }\r\n</style> -->\r\n\r\n<template lang=\"\">\r\n    <v-app>\r\n        <div class=\"background\"></div>\r\n        <v-main class=\"d-flex justify-center align-center\">\r\n            <v-col cols=\"10\" lg=\"4\" class=\"mx-auto\">\r\n                <v-card >\r\n                    <v-alert\r\n                        border=\"left\"\r\n                        close-text=\"close-text\"\r\n                        dismissible=\"dismissible\"\r\n                        dark=\"dark\"\r\n                        color=\"red lighten-1\"\r\n                        v-if=\"show\">\r\n                        Email hoặc Mật khẩu chưa đúng!\r\n                    </v-alert>\r\n                    <v-row >\r\n                        <v-col cols=\"12\" sm=\"10\" md=\"8\" lg=\"6\">\r\n                            <v-card>\r\n                                <v-card-title\r\n                                    class=\"justify-content-center pt-5 bg-primary white--text\"\r\n                                    color=\"text--darken-2\">\r\n                                    <h3>Đăng nhập</h3>\r\n                                </v-card-title>\r\n\r\n                                <v-form\r\n                                    ref=\"form\"\r\n                                    @submit.prevent=\"login\"\r\n                                    class=\"pa-5\"\r\n                                    enctype=\"multipart/form-data\">\r\n                                    <v-text-field\r\n                                        v-model=\"users.email\"\r\n                                        filled=\"filled\"\r\n                                        label=\"Email\"\r\n                                        :rules=\"[rules.required]\"></v-text-field>\r\n                                    <v-text-field\r\n                                        v-model=\"users.password\"\r\n                                        :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                                        :rules=\"[rules.required, rules.min]\"\r\n                                        :type=\"show1 ? 'text' : 'password'\"\r\n                                        name=\"input-10-1\"\r\n                                        label=\"Mật khẩu\"\r\n                                        hint=\"At least 8 characters\"\r\n                                        filled=\"filled\"\r\n                                        counter=\"counter\"\r\n                                        @click:append=\"show1 = !show1\"></v-text-field>\r\n                                    <v-btn type=\"submit\" class=\"pink white--text float-right\">Đăng nhập</v-btn >\r\n                                    <div class=\"mb-10\"></div>\r\n                                </v-form>\r\n                            </v-card>\r\n                        </v-col>\r\n                    </v-col>\r\n                </v-card >\r\n            </v-row >\r\n        </v-main>\r\n      </v-app>\r\n    </template>\r\n    <script>\r\n        import axios from \"axios\";\r\n        import API from \"@/services/api.user\";\r\n        export default {\r\n            name: \"add-user\",\r\n            data() {\r\n                return {\r\n                    rules: {\r\n                        required: (value) => !!value || \"This field is Required.\",\r\n                        min: (v) => v.length >= 8 || \"Min 8 characters\",\r\n                        emailMatch: () => `The email and password you entered don't match`\r\n                    },\r\n                    users: {\r\n                        email: \"\",\r\n                        password: \"\"\r\n                    },\r\n                    show: false,\r\n                    show1: false\r\n                };\r\n            },\r\n\r\n            methods: {\r\n                async login() {\r\n                    if (this.$refs.form.validate()) {\r\n                        let result = await API.getLogin(this.users.email, this.users.password);\r\n                        console.log(result.status);\r\n                        console.warn(result.data.length);\r\n                        if (result.status == 200 && result.data.length > 0) {\r\n                            console.log(result.data);\r\n                            localStorage.setItem(\"user-info\", JSON.stringify(result));\r\n                            this\r\n                                .$router\r\n                                .push({name: \"show-user\"});\r\n                        } else {\r\n                            this.show = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    </script>\r\n    <style>\r\n        .background {\r\n            background-color: #004d40;\r\n            height: 50%;\r\n            width: 100%;\r\n            top: 0;\r\n            display: block;\r\n            position: absolute;\r\n\r\n        }\r\n    </style>"]},"metadata":{},"sourceType":"module"}
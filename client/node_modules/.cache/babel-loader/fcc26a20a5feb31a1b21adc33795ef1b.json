{"ast":null,"code":"import axios from \"axios\";\nimport API from \"@/services/api.user\";\nexport default {\n  name: \"add-user\",\n  data() {\n    return {\n      rules: {\n        required: value => !!value || \"This field is Required.\",\n        min: v => v.length >= 8 || \"Min 8 characters\",\n        emailMatch: () => `The email and password you entered don't match`\n      },\n      users: {\n        name: \"\",\n        gender: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      show1: false,\n      show: false\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formUser = new FormData();\n      formUser.append(\"name\", this.users.name);\n      formUser.append(\"gender\", this.users.gender);\n      formUser.append(\"email\", this.users.email);\n      formUser.append(\"password\", this.users.password);\n      if (this.$refs.form.validate()) {\n        const res = await API.addUser(formUser);\n        if (res) {\n          this.show = true;\n          this.$refs.form.reset();\n        }\n      }\n      // if (this.$refs.form.validate()) {\n      //   const res = await axios.post(\"http://localhost:5000/api/user\", {\n      //     name: this.users.name,\n      //     gender: this.users.gender,\n      //     email: this.users.email,\n      //     password: this.users.password,\n      //   });\n      // }\n      // if (this.$refs.form.validate()) {\n      //   const res = await axios.post(\"http://localhost:5000/api/user\",formUser );\n      // }\n    }\n  }\n};","map":{"version":3,"mappings":"AAoDA;AACA;AACA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAN;QACAO;QACAC;QACAC;MACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA;MACAC;MACAA;MACAA;MACAA;MAEA;QACA;QACA;UACA;UACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","data","rules","required","min","emailMatch","users","gender","email","password","show1","show","methods","formUser"],"sourceRoot":"src/views/users","sources":["AddUser.vue"],"sourcesContent":["<template lang=\"\">\r\n  <v-container>\r\n    <v-alert\r\n      border=\"left\"\r\n      close-text\r\n      dismissible\r\n      dark\r\n      color=\"green accent-4\"\r\n      v-if=\"show\"\r\n      >Thêm thành công!\r\n    </v-alert>\r\n    <v-row justify=\"center\">\r\n      <v-col cols=\"12\" sm=\"10\" md=\"8\" lg=\"6\">\r\n        <v-card>\r\n          <v-card-title class=\"font\">Thêm Thành Viên</v-card-title>\r\n          <v-form ref=\"form\" @submit.prevent=\"submitForm\" class=\"pa-5\">\r\n            <v-text-field\r\n              v-model=\"users.name\"\r\n              label=\"tên người dùng\"\r\n              :rules=\"rules\"\r\n            ></v-text-field>\r\n            <v-radio-group\r\n              row\r\n              v-model=\"users.gender\"\r\n              label=\"Giới tính\"\r\n              mandatory\r\n            >\r\n              <v-radio label=\"Nam\" value=\"M\"></v-radio>\r\n              <v-radio label=\"Nữ\" value=\"F\"></v-radio>\r\n            </v-radio-group>\r\n            <v-text-field v-model=\"users.email\" label=\"Email\" :rules=\"rules\">\r\n            </v-text-field>\r\n\r\n            <v-text-field\r\n              v-model=\"users.password\"\r\n              :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\r\n              :rules=\"[rules.required, rules.min]\"\r\n              :type=\"show1 ? 'text' : 'password'\"\r\n              name=\"input-10-1\"\r\n              label=\"Mật khẩu\"\r\n              hint=\"At least 8 characters\"\r\n              counter\r\n              @click:append=\"show1 = !show1\"\r\n            ></v-text-field>\r\n            <v-btn type=\"submit\" color=\"primary\">add</v-btn>\r\n          </v-form>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport API from \"@/services/api.user\";\r\nexport default {\r\n  name: \"add-user\",\r\n  data() {\r\n    return {\r\n      rules: {\r\n        required: (value) => !!value || \"This field is Required.\",\r\n        min: (v) => v.length >= 8 || \"Min 8 characters\",\r\n        emailMatch: () => `The email and password you entered don't match`,\r\n      },\r\n      users: {\r\n        name: \"\",\r\n        gender: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      show1: false,\r\n      show: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      const formUser = new FormData();\r\n      formUser.append(\"name\", this.users.name);\r\n      formUser.append(\"gender\", this.users.gender);\r\n      formUser.append(\"email\", this.users.email);\r\n      formUser.append(\"password\", this.users.password);\r\n\r\n      if (this.$refs.form.validate()) {\r\n        const res = await API.addUser(formUser);\r\n        if (res) {\r\n          this.show = true;\r\n          this.$refs.form.reset();\r\n        }\r\n      }\r\n      // if (this.$refs.form.validate()) {\r\n      //   const res = await axios.post(\"http://localhost:5000/api/user\", {\r\n      //     name: this.users.name,\r\n      //     gender: this.users.gender,\r\n      //     email: this.users.email,\r\n      //     password: this.users.password,\r\n      //   });\r\n      // }\r\n      // if (this.$refs.form.validate()) {\r\n      //   const res = await axios.post(\"http://localhost:5000/api/user\",formUser );\r\n      // }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"\"></style>\r\n"]},"metadata":{},"sourceType":"module"}
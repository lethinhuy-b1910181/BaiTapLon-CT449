{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport API from \"../../services/api.product\";\nimport APICategory from \"@/services/api.category\";\n\n// import ProductList from \"@/components/product/Product.list.vue\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      search: \"\",\n      show: false,\n      products: [],\n      category: [],\n      sortBy: \"\",\n      keys: [\"Tên\", \"Số Lượng\", \"Giá\"]\n    };\n  },\n  methods: {\n    // async sortBy(prop) {   this.products.sort((a, b) => (a[prop] > b[prop] ? -1 :\n    // 1)); },\n    sortByAsc() {\n      this.products.sort((a, b) => a.price < b.price ? -1 : 1);\n      // this.products.sort((a, b) => (a[prop] > b[pro  p] ? -1 : 1));\n    },\n\n    sortByDesc() {\n      this.products.sort((a, b) => a.price > b.price ? -1 : 1);\n      // this.products.sort((a, b) => (a[prop] > b[pro  p] ? -1 : 1));\n    },\n\n    async removePro(id) {\n      console.log(id);\n      const res = API.deleteProduct(id);\n      this.created();\n      this.show = true;\n    },\n    async created() {\n      this.products = await API.getAllProduct();\n      this.category = await APICategory.getAllCategory();\n      // console.log(this.products);\n    }\n  },\n\n  async mounted() {\n    this.created();\n    let user = localStorage.getItem(\"user-info\");\n    if (!user) {\n      this.$router.push({\n        name: \"login\"\n      });\n    }\n  },\n  computed: {\n    // filteredProduct: function () {   return this.products.filter((product) => {\n    // return product.name.match(this.search);   }); },\n\n    filteredProduct() {\n      return this.products.filter(temp => {\n        const trimmedSearch = temp.name.toLowerCase().trim();\n        return trimmedSearch.includes(this.search);\n      });\n    }\n    // filteredKeys() {   return this.keys.filter((key) => key !== \"Name\"); },\n  }\n};","map":{"version":3,"mappings":";AA6GA;AACA;AACA;;AAEA;;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACA;IACA;IACAC;MACA,KACAL,SACAM,eACAC,oBACA,KACA,CACA;MACA;IACA;;IACAC;MACA,KACAR,SACAM,eACAC,oBACA,KACA,CACA;MACA;IACA;;IACA;MACAE;MACA;MACA;MACA;IACA;IACA;MACA;MACA;MACA;IACA;EACA;;EAEA;IACA;IACA;IACA;MACA,KACAC,QACAC;QAAAf;MAAA;IACA;EACA;EAEAgB;IACA;IACA;;IAEAC;MACA,YACAb,SACAc;QACA;QACA;MAAA;IACA;IACA;EACA;AACA","names":["name","data","search","show","products","category","sortBy","keys","methods","sortByAsc","sort","a","sortByDesc","console","$router","push","computed","filteredProduct","filter"],"sourceRoot":"src/components/product","sources":["HomeProduct.vue"],"sourcesContent":["<template>\n    <v-container>\n        <br/>\n        <v-row>\n            <v-col class=\"pt-5\">\n                <v-btn class=\"green accent-4 white--text\" :to=\"{ name: 'add-pro' }\">\n                    <i class=\"fas fa-plus\"></i>\n                </v-btn >\n            </v-col>\n            <div>\n                <h5 class=\"pt-5\">\n                    Sắp xếp đơn giá:&nbsp;&nbsp;\n                    <v-btn @click=\"sortByAsc\" class=\"green accent-4 white--text\">\n                        <i class=\"fa-solid fa-up-long\"></i>\n                    </v-btn>\n                    &nbsp;&nbsp;\n                    <v-btn @click=\"sortByDesc\" class=\"green accent-4 white--text\">\n                        <i class=\"fa-solid fa-down-long\"></i >\n                    </v-btn>\n\n                    <!-- <font-awesome-icon icon=\"fa-solid fa-arrow-up-right-dots\" /> -->\n                    <!-- <font-awesome-icon icon=\"fa-duotone fa-arrow-up-right-dots\" /> -->\n                </h5>\n                <!-- <v-select v-model=\"sortBy\" color=\"blue-grey lighten-1\" hide-details\n                :items=\"keys\" prepend-inner-icon=\"mdi-magnify\" label=\"Sắp xếp theo\" ></v-select>\n                -->\n            </div>\n        </v-row>\n\n        <br/>\n        <!-- alert update -->\n        <v-alert\n            border=\"left\"\n            close-text=\"close-text\"\n            dismissible=\"dismissible\"\n            dark=\"dark\"\n            color=\"green accent-4\"\n            v-if=\"this.$route.params.message\">\n            {{ this.$route.params.message }}\n        </v-alert>\n        <!-- alert delete -->\n        <v-alert\n            border=\"left\"\n            close-text=\"close-text\"\n            dismissible=\"dismissible\"\n            dark=\"dark\"\n            color=\"green accent-4\"\n            v-if=\"show\">\n            Xóa thành công!\n        </v-alert>\n        <!-- search -->\n        <v-text-field\n            v-model=\"search\"\n            append-icon=\"mdi-magnify\"\n            label=\"Tìm kiếm (tên)\"\n            single-line=\"single-line\"\n            hide-details=\"hide-details\"></v-text-field>\n        <br/>\n        <!-- show data -->\n        <table\n            id=\"contacts\"\n            class=\"table table-bordered table-striped\"\n            style=\"width: 100%\">\n            <thead>\n                <tr>\n                    <th class=\"\">Tên</th>\n                    <th class=\"\">Ảnh</th>\n                    <th class=\"\">Số Lượng</th>\n                    <th class=\"\">Giá</th>\n                    <th class=\"\">Thương hiệu</th>\n                    <th class=\"\">Tính năng</th>\n                    <th class=\"\">Công cụ</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"product in filteredProduct\" :key=\"product._id\">\n                    <td >{{ product.name }}</td>\n                    <td>\n                        <v-img height=\"50px\" width=\"50px\" :src=\"`/${product.image}`\"></v-img>\n                    </td>\n                    <td>{{ product.qty }}</td>\n\n                    <!-- <td v-for=\"cate in category\"> <td v-if=\"cate._id ==\n                    products.category\">{{cate.name}}}</td> </td> -->\n                    <td>{{ product.price }}đ</td>\n                    <!-- <td>{{ product.category }}</td> -->\n                    <span v-for=\"cate in category\">\n                        <td v-if=\"product.category == cate._id\" class=\"border-0\">\n                            {{ cate.name }}\n                        </td>\n                    </span>\n                    <td>{{ product.detail }}</td>\n                    <td>\n                        <router-link :to=\"{ name: 'edit-pro', params: { id: product._id } }\">\n                            <i class=\"fa-solid fa-pen-to-square color\" color=\"blue\"></i >\n                        </router-link>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <button text=\"text\" @click=\"removePro(product._id)\">\n                            <i class=\"fa-solid fa-trash-can color\" color=\"red\"></i>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <br/>\n    </v-container>\n</template>\n\n<script>\n    import axios from \"axios\";\n    import API from \"../../services/api.product\";\n    import APICategory from \"@/services/api.category\";\n\n    // import ProductList from \"@/components/product/Product.list.vue\";\n\n    export default {\n        name: \"Home\",\n        data() {\n            return {\n                search: \"\",\n                show: false,\n                products: [],\n                category: [],\n                sortBy: \"\",\n                keys: [\"Tên\", \"Số Lượng\", \"Giá\"]\n            };\n        },\n\n        methods: {\n            // async sortBy(prop) {   this.products.sort((a, b) => (a[prop] > b[prop] ? -1 :\n            // 1)); },\n            sortByAsc() {\n                this\n                    .products\n                    .sort((a, b) => (\n                        a.price < b.price\n                            ? -1\n                            : 1\n                    ));\n                // this.products.sort((a, b) => (a[prop] > b[pro  p] ? -1 : 1));\n            },\n            sortByDesc() {\n                this\n                    .products\n                    .sort((a, b) => (\n                        a.price > b.price\n                            ? -1\n                            : 1\n                    ));\n                // this.products.sort((a, b) => (a[prop] > b[pro  p] ? -1 : 1));\n            },\n            async removePro(id) {\n                console.log(id);\n                const res = API.deleteProduct(id);\n                this.created();\n                this.show = true;\n            },\n            async created() {\n                this.products = await API.getAllProduct();\n                this.category = await APICategory.getAllCategory();\n                // console.log(this.products);\n            }\n        },\n\n        async mounted() {\n            this.created();\n            let user = localStorage.getItem(\"user-info\");\n            if (!user) {\n                this\n                    .$router\n                    .push({name: \"login\"});\n            }\n        },\n\n        computed: {\n            // filteredProduct: function () {   return this.products.filter((product) => {\n            // return product.name.match(this.search);   }); },\n\n            filteredProduct() {\n                return this\n                    .products\n                    .filter((temp) =>{\n                      const trimmedSearch = temp.name.toLowerCase().trim()\n                      return trimmedSearch.includes(this.search)} );\n            },\n            // filteredKeys() {   return this.keys.filter((key) => key !== \"Name\"); },\n        }\n    };\n</script>\n\n<style>\n    .i {\n        width: 100px;\n        height: 100px;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}
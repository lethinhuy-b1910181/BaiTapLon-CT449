{"ast":null,"code":"import axios from \"axios\";\nimport API from \"../../services/api.product\";\nimport APICategory from \"@/services/api.category\";\n\n// import ProductList from \"@/components/product/Product.list.vue\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      itemsPerPageArray: [4, 8, 12],\n      search: \"\",\n      filter: {},\n      sortDesc: false,\n      page: 1,\n      itemsPerPage: 4,\n      sortBy: \"name\",\n      keys: [\"Name\", \"Calories\", \"Fat\", \"Carbs\", \"Protein\", \"Sodium\", \"Calcium\", \"Iron\"],\n      items: [{\n        name: \"Frozen Yogurt\",\n        calories: 159,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0,\n        sodium: 87,\n        calcium: \"14%\",\n        iron: \"1%\"\n      }, {\n        name: \"Ice cream sandwich\",\n        calories: 237,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3,\n        sodium: 129,\n        calcium: \"8%\",\n        iron: \"1%\"\n      }]\n    };\n  },\n  computed: {\n    filteredKeys() {\n      return this.keys.filter(key => key !== \"Name\");\n    }\n  }\n};","map":{"version":3,"mappings":"AAgGA;AACA;AACA;;AAEA;;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,OACA,QACA,YACA,OACA,SACA,WACA,UACA,WACA,OACA;MACAC,QACA;QACAV;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IAEA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["name","data","itemsPerPageArray","search","filter","sortDesc","page","itemsPerPage","sortBy","keys","items","calories","fat","carbs","protein","sodium","calcium","iron","computed","filteredKeys"],"sourceRoot":"src/components/product","sources":["HomeProduct.vue"],"sourcesContent":["<template>\n  <v-container>\n    <div id=\"app\">\n      <v-app id=\"inspire\">\n        <v-container fluid>\n          <v-data-iterator\n            :items=\"items\"\n            :items-per-page.sync=\"itemsPerPage\"\n            :page.sync=\"page\"\n            :search=\"search\"\n            :sort-by=\"sortBy.toLowerCase()\"\n            :sort-desc=\"sortDesc\"\n            hide-default-footer\n          >\n            <template v-slot:header>\n              <v-toolbar dark color=\"blue darken-3\" class=\"mb-1\">\n                <v-text-field\n                  v-model=\"search\"\n                  clearable\n                  flat\n                  solo-inverted\n                  hide-details\n                  prepend-inner-icon=\"mdi-magnify\"\n                  label=\"Search\"\n                ></v-text-field>\n                <template v-if=\"$vuetify.breakpoint.mdAndUp\">\n                  <v-spacer></v-spacer>\n                  <v-select\n                    v-model=\"sortBy\"\n                    flat\n                    solo-inverted\n                    hide-details\n                    :items=\"keys\"\n                    prepend-inner-icon=\"mdi-magnify\"\n                    label=\"Sort by\"\n                  ></v-select>\n                  <v-spacer></v-spacer>\n                  <v-btn-toggle v-model=\"sortDesc\" mandatory>\n                    <v-btn large depressed color=\"blue\" :value=\"false\">\n                      <v-icon>mdi-arrow-up</v-icon>\n                    </v-btn>\n                    <v-btn large depressed color=\"blue\" :value=\"true\">\n                      <v-icon>mdi-arrow-down</v-icon>\n                    </v-btn>\n                  </v-btn-toggle>\n                </template>\n              </v-toolbar>\n            </template>\n\n            <template v-slot:default=\"props\">\n              <v-row>\n                <v-col\n                  v-for=\"item in props.items\"\n                  :key=\"item.name\"\n                  cols=\"12\"\n                  sm=\"6\"\n                  md=\"4\"\n                  lg=\"3\"\n                >\n                  <v-card>\n                    <v-card-title class=\"subheading font-weight-bold\">\n                      {{ item.name }}\n                    </v-card-title>\n\n                    <v-divider></v-divider>\n\n                    <v-list dense>\n                      <v-list-item\n                        v-for=\"(key, index) in filteredKeys\"\n                        :key=\"index\"\n                      >\n                        <v-list-item-content\n                          :class=\"{ 'blue--text': sortBy === key }\"\n                        >\n                          {{ key }}:\n                        </v-list-item-content>\n                        <v-list-item-content\n                          class=\"align-end\"\n                          :class=\"{ 'blue--text': sortBy === key }\"\n                        >\n                          {{ item[key.toLowerCase()] }}\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-card>\n                </v-col>\n              </v-row>\n            </template>\n          </v-data-iterator>\n        </v-container>\n      </v-app>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport API from \"../../services/api.product\";\nimport APICategory from \"@/services/api.category\";\n\n// import ProductList from \"@/components/product/Product.list.vue\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      itemsPerPageArray: [4, 8, 12],\n      search: \"\",\n      filter: {},\n      sortDesc: false,\n      page: 1,\n      itemsPerPage: 4,\n      sortBy: \"name\",\n      keys: [\n        \"Name\",\n        \"Calories\",\n        \"Fat\",\n        \"Carbs\",\n        \"Protein\",\n        \"Sodium\",\n        \"Calcium\",\n        \"Iron\",\n      ],\n      items: [\n        {\n          name: \"Frozen Yogurt\",\n          calories: 159,\n          fat: 6.0,\n          carbs: 24,\n          protein: 4.0,\n          sodium: 87,\n          calcium: \"14%\",\n          iron: \"1%\",\n        },\n        {\n          name: \"Ice cream sandwich\",\n          calories: 237,\n          fat: 9.0,\n          carbs: 37,\n          protein: 4.3,\n          sodium: 129,\n          calcium: \"8%\",\n          iron: \"1%\",\n        },\n      ],\n    };\n  },\n  computed: {\n    filteredKeys() {\n      return this.keys.filter((key) => key !== \"Name\");\n    },\n  },\n};\n</script>\n\n<style>\n.i {\n  width: 100px;\n  height: 100px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport API from \"../../services/api.product\";\nimport APICategory from \"@/services/api.category\";\n\n// import ProductList from \"@/components/product/Product.list.vue\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      itemsPerPageArray: [4, 8, 12],\n      search: \"\",\n      filter: {},\n      sortDesc: false,\n      page: 1,\n      itemsPerPage: 4,\n      sortBy: \"name\",\n      keys: [\"Name\", \"Calories\", \"Fat\", \"Carbs\", \"Protein\", \"Sodium\", \"Calcium\", \"Iron\"],\n      items: [{\n        name: \"Frozen Yogurt\",\n        calories: 159,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0,\n        sodium: 87,\n        calcium: \"14%\",\n        iron: \"1%\"\n      }, {\n        name: \"Ice cream sandwich\",\n        calories: 237,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3,\n        sodium: 129,\n        calcium: \"8%\",\n        iron: \"1%\"\n      }, {\n        name: \"Eclair\",\n        calories: 262,\n        fat: 16.0,\n        carbs: 23,\n        protein: 6.0,\n        sodium: 337,\n        calcium: \"6%\",\n        iron: \"7%\"\n      }, {\n        name: \"Cupcake\",\n        calories: 305,\n        fat: 3.7,\n        carbs: 67,\n        protein: 4.3,\n        sodium: 413,\n        calcium: \"3%\",\n        iron: \"8%\"\n      }, {\n        name: \"Gingerbread\",\n        calories: 356,\n        fat: 16.0,\n        carbs: 49,\n        protein: 3.9,\n        sodium: 327,\n        calcium: \"7%\",\n        iron: \"16%\"\n      }, {\n        name: \"Jelly bean\",\n        calories: 375,\n        fat: 0.0,\n        carbs: 94,\n        protein: 0.0,\n        sodium: 50,\n        calcium: \"0%\",\n        iron: \"0%\"\n      }, {\n        name: \"Lollipop\",\n        calories: 392,\n        fat: 0.2,\n        carbs: 98,\n        protein: 0,\n        sodium: 38,\n        calcium: \"0%\",\n        iron: \"2%\"\n      }, {\n        name: \"Honeycomb\",\n        calories: 408,\n        fat: 3.2,\n        carbs: 87,\n        protein: 6.5,\n        sodium: 562,\n        calcium: \"0%\",\n        iron: \"45%\"\n      }, {\n        name: \"Donut\",\n        calories: 452,\n        fat: 25.0,\n        carbs: 51,\n        protein: 4.9,\n        sodium: 326,\n        calcium: \"2%\",\n        iron: \"22%\"\n      }, {\n        name: \"KitKat\",\n        calories: 518,\n        fat: 26.0,\n        carbs: 65,\n        protein: 7,\n        sodium: 54,\n        calcium: \"12%\",\n        iron: \"6%\"\n      }]\n    };\n  },\n  computed: {\n    filteredKeys() {\n      return this.keys.filter(key => key !== \"Name\");\n    }\n  },\n  methods: {\n    formerPage() {\n      if (this.page - 1 >= 1) this.page -= 1;\n    },\n    updateItemsPerPage(number) {\n      this.itemsPerPage = number;\n    }\n  }\n};","map":{"version":3,"mappings":"AA+EA;AACA;AACA;;AAEA;;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,OACA,QACA,YACA,OACA,SACA,WACA,UACA,WACA,OACA;MACAC,QACA;QACAV;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAjB;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IAEA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","data","itemsPerPageArray","search","filter","sortDesc","page","itemsPerPage","sortBy","keys","items","calories","fat","carbs","protein","sodium","calcium","iron","computed","filteredKeys","methods","formerPage","updateItemsPerPage"],"sourceRoot":"src/components/product","sources":["HomeProduct.vue"],"sourcesContent":["<template>\n  <v-container>\n    <div id=\"app\">\n      <v-app id=\"inspire\">\n        <v-container fluid>\n          <v-data-iterator\n            :items=\"items\"\n            :items-per-page.sync=\"itemsPerPage\"\n            :page.sync=\"page\"\n            :search=\"search\"\n            :sort-by=\"sortBy.toLowerCase()\"\n            :sort-desc=\"sortDesc\"\n            hide-default-footer\n          >\n            <!--header  -->\n            <template v-slot:header>\n              <v-toolbar dark color=\"blue darken-3\" class=\"mb-1\">\n                <template v-if=\"$vuetify.breakpoint.mdAndUp\">\n                  <v-spacer></v-spacer>\n                  <v-select\n                    v-model=\"sortBy\"\n                    flat\n                    solo-inverted\n                    hide-details\n                    :items=\"keys\"\n                    prepend-inner-icon=\"mdi-magnify\"\n                    label=\"Sort by\"\n                  ></v-select>\n                </template>\n              </v-toolbar>\n            </template>\n            <!-- hien thi sanh sach -->\n            <template v-slot:default=\"props\">\n              <v-row>\n                <v-col\n                  v-for=\"item in props.items\"\n                  :key=\"item.name\"\n                  cols=\"12\"\n                  sm=\"6\"\n                  md=\"4\"\n                  lg=\"3\"\n                >\n                  <v-card>\n                    <v-card-title class=\"subheading font-weight-bold\">\n                      {{ item.name }}\n                    </v-card-title>\n\n                    <v-divider></v-divider>\n\n                    <v-list>\n                      <v-list-item\n                        v-for=\"(key, index) in filteredKeys\"\n                        :key=\"index\"\n                      >\n                        <v-list-item-content\n                          :class=\"{ 'blue--text': sortBy === key }\"\n                        >\n                          {{ key }}:\n                        </v-list-item-content>\n                        <v-list-item-content\n                          class=\"align-end\"\n                          :class=\"{ 'blue--text': sortBy === key }\"\n                        >\n                          {{ item[key.toLowerCase()] }}\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-card>\n                </v-col>\n              </v-row>\n            </template>\n          </v-data-iterator>\n        </v-container>\n      </v-app>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport API from \"../../services/api.product\";\nimport APICategory from \"@/services/api.category\";\n\n// import ProductList from \"@/components/product/Product.list.vue\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      itemsPerPageArray: [4, 8, 12],\n      search: \"\",\n      filter: {},\n      sortDesc: false,\n      page: 1,\n      itemsPerPage: 4,\n      sortBy: \"name\",\n      keys: [\n        \"Name\",\n        \"Calories\",\n        \"Fat\",\n        \"Carbs\",\n        \"Protein\",\n        \"Sodium\",\n        \"Calcium\",\n        \"Iron\",\n      ],\n      items: [\n        {\n          name: \"Frozen Yogurt\",\n          calories: 159,\n          fat: 6.0,\n          carbs: 24,\n          protein: 4.0,\n          sodium: 87,\n          calcium: \"14%\",\n          iron: \"1%\",\n        },\n        {\n          name: \"Ice cream sandwich\",\n          calories: 237,\n          fat: 9.0,\n          carbs: 37,\n          protein: 4.3,\n          sodium: 129,\n          calcium: \"8%\",\n          iron: \"1%\",\n        },\n        {\n          name: \"Eclair\",\n          calories: 262,\n          fat: 16.0,\n          carbs: 23,\n          protein: 6.0,\n          sodium: 337,\n          calcium: \"6%\",\n          iron: \"7%\",\n        },\n        {\n          name: \"Cupcake\",\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3,\n          sodium: 413,\n          calcium: \"3%\",\n          iron: \"8%\",\n        },\n        {\n          name: \"Gingerbread\",\n          calories: 356,\n          fat: 16.0,\n          carbs: 49,\n          protein: 3.9,\n          sodium: 327,\n          calcium: \"7%\",\n          iron: \"16%\",\n        },\n        {\n          name: \"Jelly bean\",\n          calories: 375,\n          fat: 0.0,\n          carbs: 94,\n          protein: 0.0,\n          sodium: 50,\n          calcium: \"0%\",\n          iron: \"0%\",\n        },\n        {\n          name: \"Lollipop\",\n          calories: 392,\n          fat: 0.2,\n          carbs: 98,\n          protein: 0,\n          sodium: 38,\n          calcium: \"0%\",\n          iron: \"2%\",\n        },\n        {\n          name: \"Honeycomb\",\n          calories: 408,\n          fat: 3.2,\n          carbs: 87,\n          protein: 6.5,\n          sodium: 562,\n          calcium: \"0%\",\n          iron: \"45%\",\n        },\n        {\n          name: \"Donut\",\n          calories: 452,\n          fat: 25.0,\n          carbs: 51,\n          protein: 4.9,\n          sodium: 326,\n          calcium: \"2%\",\n          iron: \"22%\",\n        },\n        {\n          name: \"KitKat\",\n          calories: 518,\n          fat: 26.0,\n          carbs: 65,\n          protein: 7,\n          sodium: 54,\n          calcium: \"12%\",\n          iron: \"6%\",\n        },\n      ],\n    };\n  },\n  computed: {\n    filteredKeys() {\n      return this.keys.filter((key) => key !== \"Name\");\n    },\n  },\n  methods: {\n    formerPage() {\n      if (this.page - 1 >= 1) this.page -= 1;\n    },\n    updateItemsPerPage(number) {\n      this.itemsPerPage = number;\n    },\n  },\n};\n</script>\n\n<style>\n.i {\n  width: 100px;\n  height: 100px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}
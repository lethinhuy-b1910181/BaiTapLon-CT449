{"ast":null,"code":"import axios from \"axios\";\nimport API from \"@/services/api.user\";\nexport default {\n  name: \"add-user\",\n  data() {\n    return {\n      rules: {\n        required: value => !!value || \"This field is Required.\",\n        min: v => v.length >= 8 || \"Min 8 characters\",\n        emailMatch: () => `The email and password you entered don't match`\n      },\n      users: {\n        name: \"\",\n        gender: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      show1: false,\n      show: false\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formUser = new FormData();\n      formUser.append(\"name\", this.users.name);\n      formUser.append(\"gender\", this.users.gender);\n      formUser.append(\"email\", this.users.email);\n      formUser.append(\"password\", this.users.password);\n      if (this.$refs.form.validate()) {\n        let result = await API.addUser(formUser);\n        console.warn(result);\n        if (result) {\n          this.show = true;\n          localStorage.setItem(\"user-info\", JSON.stringify(result));\n          this.$refs.form.reset();\n        }\n      }\n      // if (this.$refs.form.validate()) {\n      //   const res = await axios.post(\"http://localhost:5000/api/user\", {\n      //     name: this.users.name,\n      //     gender: this.users.gender,\n      //     email: this.users.email,\n      //     password: this.users.password,\n      //   });\n      // }\n      // if (this.$refs.form.validate()) {\n      //   const res = await axios.post(\"http://localhost:5000/api/user\",formUser );\n      // }\n    }\n  },\n\n  mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    // if (user) {\n    //   this.$router.push({ name: \"home\" });\n    // }\n  }\n};","map":{"version":3,"mappings":"AA4DA;AACA;AACA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAN;QACAO;QACAC;QACAC;MACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA;MACAC;MACAA;MACAA;MACAA;MACA;QACA;QACAC;QAEA;UACA;UACAC;UACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;;EACAC;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","data","rules","required","min","emailMatch","users","gender","email","password","show1","show","methods","formUser","console","localStorage","mounted"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template lang=\"\">\n  <v-container>\n    <v-alert\n      border=\"left\"\n      close-text\n      dismissible\n      dark\n      color=\"green accent-4\"\n      v-if=\"show\"\n      >Thêm thành công!\n    </v-alert>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" sm=\"10\" md=\"8\" lg=\"6\">\n        <v-card>\n          <v-card-title class=\"subheading font-weight-bold\"\n            >Thêm Thành Viên</v-card-title\n          >\n          <v-form ref=\"form\" @submit.prevent=\"submitForm\" class=\"pa-5\">\n            <v-text-field\n              v-model=\"users.name\"\n              label=\"Tên người dùng\"\n              :rules=\"[rules.required]\"\n            ></v-text-field>\n            <v-radio-group\n              row\n              v-model=\"users.gender\"\n              label=\"Giới tính\"\n              mandatory\n            >\n              <v-radio label=\"Nam\" value=\"M\"></v-radio>\n              <v-radio label=\"Nữ\" value=\"F\"></v-radio>\n            </v-radio-group>\n            <v-text-field\n              v-model=\"users.email\"\n              label=\"Email\"\n              :rules=\"[rules.required]\"\n            >\n            </v-text-field>\n\n            <v-text-field\n              v-model=\"users.password\"\n              :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n              :rules=\"[rules.required, rules.min]\"\n              :type=\"show1 ? 'text' : 'password'\"\n              name=\"input-10-1\"\n              label=\"Mật khẩu\"\n              hint=\"At least 8 characters\"\n              counter\n              @click:append=\"show1 = !show1\"\n            ></v-text-field>\n            <v-card-actions>\n              <v-btn type=\"submit\" color=\"primary\">Thêm</v-btn>\n            </v-card-actions>\n          </v-form>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport axios from \"axios\";\nimport API from \"@/services/api.user\";\nexport default {\n  name: \"add-user\",\n  data() {\n    return {\n      rules: {\n        required: (value) => !!value || \"This field is Required.\",\n        min: (v) => v.length >= 8 || \"Min 8 characters\",\n        emailMatch: () => `The email and password you entered don't match`,\n      },\n      users: {\n        name: \"\",\n        gender: \"\",\n        email: \"\",\n        password: \"\",\n      },\n      show1: false,\n      show: false,\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formUser = new FormData();\n      formUser.append(\"name\", this.users.name);\n      formUser.append(\"gender\", this.users.gender);\n      formUser.append(\"email\", this.users.email);\n      formUser.append(\"password\", this.users.password);\n      if (this.$refs.form.validate()) {\n        let result = await API.addUser(formUser);\n        console.warn(result);\n\n        if (result) {\n          this.show = true;\n          localStorage.setItem(\"user-info\", JSON.stringify(result));\n          this.$refs.form.reset();\n        }\n      }\n      // if (this.$refs.form.validate()) {\n      //   const res = await axios.post(\"http://localhost:5000/api/user\", {\n      //     name: this.users.name,\n      //     gender: this.users.gender,\n      //     email: this.users.email,\n      //     password: this.users.password,\n      //   });\n      // }\n      // if (this.$refs.form.validate()) {\n      //   const res = await axios.post(\"http://localhost:5000/api/user\",formUser );\n      // }\n    },\n  },\n  mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    // if (user) {\n    //   this.$router.push({ name: \"home\" });\n    // }\n  },\n};\n</script>\n<style lang=\"\"></style>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport API from \"../../services/api.product\";\nimport APICategory from \"@/services/api.category\";\n\n// import ProductList from \"@/components/product/Product.list.vue\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      search: \"\",\n      show: false,\n      products: [],\n      category: [],\n      sortBy: \"\",\n      keys: [\"Tên\", \"Số Lượng\", \"Giá\"]\n    };\n  },\n  methods: {\n    async sortBy(prop) {\n      this.products.sort((a, b) => a[prop] < b[prop] ? -1 : 1);\n    },\n    async removePro(id) {\n      console.log(id);\n      const res = API.deleteProduct(id);\n      this.created();\n      this.show = true;\n    },\n    async created() {\n      this.products = await API.getAllProduct();\n      this.category = await APICategory.getAllCategory();\n      // console.log(this.products);\n    }\n  },\n\n  async mounted() {\n    this.created();\n    let user = localStorage.getItem(\"user-info\");\n    if (!user) {\n      this.$router.push({\n        name: \"login\"\n      });\n    }\n  },\n  computed: {\n    filteredProduct: function () {\n      return this.products.filter(product => {\n        return product.name.match(this.search);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAsJA;AACA;AACA;;AAEA;;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACA;MACA;IACA;IACA;MACAC;MACA;MACA;MACA;IACA;IACA;MACA;MACA;MACA;IACA;EACA;;EAEA;IACA;IACA;IACA;MACA;QAAAT;MAAA;IACA;EACA;EAEAU;IACAC;MACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","search","show","products","category","sortBy","keys","methods","console","computed","filteredProduct"],"sourceRoot":"src/components/product","sources":["HomeProduct.vue"],"sourcesContent":["<template>\n  <v-container>\n    <div id=\"app\">\n      <v-app id=\"inspire\">\n        <v-container fluid>\n          <v-data-iterator\n            :items=\"items\"\n            :items-per-page.sync=\"itemsPerPage\"\n            :page.sync=\"page\"\n            :search=\"search\"\n            :sort-by=\"sortBy.toLowerCase()\"\n            :sort-desc=\"sortDesc\"\n            hide-default-footer\n          >\n            <template v-slot:header>\n              <v-toolbar dark color=\"blue darken-3\" class=\"mb-1\">\n                <v-text-field\n                  v-model=\"search\"\n                  clearable\n                  flat\n                  solo-inverted\n                  hide-details\n                  prepend-inner-icon=\"mdi-magnify\"\n                  label=\"Search\"\n                ></v-text-field>\n                <template v-if=\"$vuetify.breakpoint.mdAndUp\">\n                  <v-spacer></v-spacer>\n                  <v-select\n                    v-model=\"sortBy\"\n                    flat\n                    solo-inverted\n                    hide-details\n                    :items=\"keys\"\n                    prepend-inner-icon=\"mdi-magnify\"\n                    label=\"Sort by\"\n                  ></v-select>\n                  <v-spacer></v-spacer>\n                  <v-btn-toggle v-model=\"sortDesc\" mandatory>\n                    <v-btn large depressed color=\"blue\" :value=\"false\">\n                      <v-icon>mdi-arrow-up</v-icon>\n                    </v-btn>\n                    <v-btn large depressed color=\"blue\" :value=\"true\">\n                      <v-icon>mdi-arrow-down</v-icon>\n                    </v-btn>\n                  </v-btn-toggle>\n                </template>\n              </v-toolbar>\n            </template>\n\n            <template v-slot:default=\"props\">\n              <v-row>\n                <v-col\n                  v-for=\"item in props.items\"\n                  :key=\"item.name\"\n                  cols=\"12\"\n                  sm=\"6\"\n                  md=\"4\"\n                  lg=\"3\"\n                >\n                  <v-card>\n                    <v-card-title class=\"subheading font-weight-bold\">\n                      {{ item.name }}\n                    </v-card-title>\n\n                    <v-divider></v-divider>\n\n                    <v-list dense>\n                      <v-list-item\n                        v-for=\"(key, index) in filteredKeys\"\n                        :key=\"index\"\n                      >\n                        <v-list-item-content\n                          :class=\"{ 'blue--text': sortBy === key }\"\n                        >\n                          {{ key }}:\n                        </v-list-item-content>\n                        <v-list-item-content\n                          class=\"align-end\"\n                          :class=\"{ 'blue--text': sortBy === key }\"\n                        >\n                          {{ item[key.toLowerCase()] }}\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-card>\n                </v-col>\n              </v-row>\n            </template>\n\n            <template v-slot:footer>\n              <v-row class=\"mt-2\" align=\"center\" justify=\"center\">\n                <span class=\"grey--text\">Items per page</span>\n                <v-menu offset-y>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      dark\n                      text\n                      color=\"primary\"\n                      class=\"ml-2\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    >\n                      {{ itemsPerPage }}\n                      <v-icon>mdi-chevron-down</v-icon>\n                    </v-btn>\n                  </template>\n                  <v-list>\n                    <v-list-item\n                      v-for=\"(number, index) in itemsPerPageArray\"\n                      :key=\"index\"\n                      @click=\"updateItemsPerPage(number)\"\n                    >\n                      <v-list-item-title>{{ number }}</v-list-item-title>\n                    </v-list-item>\n                  </v-list>\n                </v-menu>\n\n                <v-spacer></v-spacer>\n\n                <span class=\"mr-4 grey--text\">\n                  Page {{ page }} of {{ numberOfPages }}\n                </span>\n                <v-btn\n                  fab\n                  dark\n                  color=\"blue darken-3\"\n                  class=\"mr-1\"\n                  @click=\"formerPage\"\n                >\n                  <v-icon>mdi-chevron-left</v-icon>\n                </v-btn>\n                <v-btn\n                  fab\n                  dark\n                  color=\"blue darken-3\"\n                  class=\"ml-1\"\n                  @click=\"nextPage\"\n                >\n                  <v-icon>mdi-chevron-right</v-icon>\n                </v-btn>\n              </v-row>\n            </template>\n          </v-data-iterator>\n        </v-container>\n      </v-app>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport API from \"../../services/api.product\";\nimport APICategory from \"@/services/api.category\";\n\n// import ProductList from \"@/components/product/Product.list.vue\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      search: \"\",\n      show: false,\n      products: [],\n      category: [],\n      sortBy: \"\",\n      keys: [\"Tên\", \"Số Lượng\", \"Giá\"],\n    };\n  },\n\n  methods: {\n    async sortBy(prop) {\n      this.products.sort((a, b) => (a[prop] < b[prop] ? -1 : 1));\n    },\n    async removePro(id) {\n      console.log(id);\n      const res = API.deleteProduct(id);\n      this.created();\n      this.show = true;\n    },\n    async created() {\n      this.products = await API.getAllProduct();\n      this.category = await APICategory.getAllCategory();\n      // console.log(this.products);\n    },\n  },\n\n  async mounted() {\n    this.created();\n    let user = localStorage.getItem(\"user-info\");\n    if (!user) {\n      this.$router.push({ name: \"login\" });\n    }\n  },\n\n  computed: {\n    filteredProduct: function () {\n      return this.products.filter((product) => {\n        return product.name.match(this.search);\n      });\n    },\n  },\n};\n</script>\n\n<style>\n.i {\n  width: 100px;\n  height: 100px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}
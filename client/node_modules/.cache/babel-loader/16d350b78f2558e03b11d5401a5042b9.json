{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport API from \"@/services/api.user\";\nexport default {\n  name: \"add-user\",\n  data() {\n    return {\n      rules: {\n        required: value => !!value || \"This field is Required.\",\n        min: v => v.length >= 8 || \"Min 8 characters\",\n        emailMatch: () => `The email and password you entered don't match`\n      },\n      users: {\n        name: \"\",\n        gender: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      show1: false,\n      show: false\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formUser = new FormData();\n      formUser.append(\"name\", this.users.name);\n      formUser.append(\"gender\", this.users.gender);\n      formUser.append(\"email\", this.users.email);\n      formUser.append(\"password\", this.users.password);\n      if (this.$refs.form.validate()) {\n        let result = await API.addUser(formUser);\n        console.warn(result);\n        if (result) {\n          this.show = true;\n          this.$refs.form.reset();\n        }\n      }\n    }\n  },\n  async mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    if (!user) {\n      this.$router.push({\n        name: \"login\"\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA8DA;AACA;AACA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAN;QACAO;QACAC;QACAC;MACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA;MACAC;MACAA;MACAA;MACAA;MACA;QACA;QACAC;QAEA;UACA;UACA,KACAC,MACAC,KACAC;QAEA;MACA;IAEA;EACA;EAEA;IACA;IACA;MACA,KACAC,QACAC;QAAAnB;MAAA;IACA;EACA;AACA","names":["name","data","rules","required","min","emailMatch","users","gender","email","password","show1","show","methods","formUser","console","$refs","form","reset","$router","push"],"sourceRoot":"src/components/users","sources":["AddUser.vue"],"sourcesContent":["<template lang=\"\">\r\n    <v-container>\r\n        <v-alert\r\n            border=\"left\"\r\n            close-text=\"close-text\"\r\n            dismissible=\"dismissible\"\r\n            dark=\"dark\"\r\n            color=\"green accent-4\"\r\n            v-if=\"show\">Thêm thành công!\r\n        </v-alert>\r\n        <v-row justify=\"center\">\r\n            <v-col cols=\"12\" sm=\"10\" md=\"8\" lg=\"6\">\r\n                <v-card>\r\n                    <v-card-title\r\n                        class=\"justify-content-center pt-5 bg-success white--text\"\r\n                        color=\"text--darken-2\">\r\n                        <h3>Thêm Thành Viên</h3>\r\n                    </v-card-title >\r\n                    <v-form ref=\"form\" @submit.prevent=\"submitForm\" class=\"pa-5\">\r\n                        <v-text-field\r\n                            v-model=\"users.name\"\r\n                            filled=\"filled\"\r\n                            label=\"Tên người dùng\"\r\n                            :rules=\"[rules.required]\"></v-text-field>\r\n                        <v-radio-group\r\n                            row=\"row\"\r\n                            v-model=\"users.gender\"\r\n                            filled=\"filled\"\r\n                            label=\"Giới tính\"\r\n                            mandatory=\"mandatory\">\r\n                            <v-radio label=\"Nam\" value=\"M\"></v-radio>\r\n                            <v-radio label=\"Nữ\" value=\"F\"></v-radio>\r\n                        </v-radio-group>\r\n                        <v-text-field\r\n                            v-model=\"users.email\"\r\n                            filled=\"filled\"\r\n                            label=\"Email\"\r\n                            :rules=\"[rules.required]\"></v-text-field>\r\n\r\n                        <v-text-field\r\n                            v-model=\"users.password\"\r\n                            :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                            :rules=\"[rules.required, rules.min]\"\r\n                            :type=\"show1 ? 'text' : 'password'\"\r\n                            name=\"input-10-1\"\r\n                            label=\"Mật khẩu\"\r\n                            hint=\"At least 8 characters\"\r\n                            filled=\"filled\"\r\n                            counter=\"counter\"\r\n                            @click:append=\"show1 = !show1\"></v-text-field>\r\n                        <v-btn type=\"submit\" class=\"green accent-4 white--text float-right\">Thêm</v-btn >\r\n                        <router-link :to=\"{name: 'show-user'}\">\r\n                            <v-btn class=\"red mx-3 white--text float-left\">HỦY</v-btn >\r\n                        </router-link >\r\n                        <div class=\"mb-10\"></div>\r\n                    </v-form>\r\n                </v-card>\r\n            </v-col>\r\n        </v-row>\r\n    </v-container>\r\n</template>\r\n<script>\r\n    import axios from \"axios\";\r\n    import API from \"@/services/api.user\";\r\n    export default {\r\n        name: \"add-user\",\r\n        data() {\r\n            return {\r\n                rules: {\r\n                    required: (value) => !!value || \"This field is Required.\",\r\n                    min: (v) => v.length >= 8 || \"Min 8 characters\",\r\n                    emailMatch: () => `The email and password you entered don't match`\r\n                },\r\n                users: {\r\n                    name: \"\",\r\n                    gender: \"\",\r\n                    email: \"\",\r\n                    password: \"\"\r\n                },\r\n                show1: false,\r\n                show: false\r\n            };\r\n        },\r\n        methods: {\r\n            async submitForm() {\r\n                const formUser = new FormData();\r\n                formUser.append(\"name\", this.users.name);\r\n                formUser.append(\"gender\", this.users.gender);\r\n                formUser.append(\"email\", this.users.email);\r\n                formUser.append(\"password\", this.users.password);\r\n                if (this.$refs.form.validate()) {\r\n                    let result = await API.addUser(formUser);\r\n                    console.warn(result);\r\n\r\n                    if (result) {\r\n                        this.show = true;\r\n                        this\r\n                            .$refs\r\n                            .form\r\n                            .reset();\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        async mounted() {\r\n            let user = localStorage.getItem(\"user-info\");\r\n            if (!user) {\r\n                this\r\n                    .$router\r\n                    .push({name: \"login\"});\r\n            }\r\n        }\r\n    };\r\n</script>\r\n<style lang=\"\"></style>"]},"metadata":{},"sourceType":"module"}